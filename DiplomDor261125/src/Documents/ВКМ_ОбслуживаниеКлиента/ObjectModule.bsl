#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий	
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
     Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Клиент КАК Клиент,
		|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК Дата,
		|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРаботПлан КАК Время,
		|	ВКМ_ОбслуживаниеКлиента.Ссылка КАК Ссылка,
		|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Сотрудник,
		|	ВКМ_ОбслуживаниеКлиента.ВыполненыеРаботы.(
		|		ОписаниеРабот)КАК ВыполненныеРаботы
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();  
	Выборка.Следующий();
	
	ТекстТелеграм = СтрШаблон("Создан Новый документ: Клиент %1, Дата проведения работ %2  Время начало работ %3  Сотрудник %4, Описание проблеммы;%5", 
								Клиент, Формат(ДатаПроведенияРабот,"ДЛФ=DD;" ), Формат(ВремяНачалаРаботПлан,"ДЛФ=T;"), Специалист, ОписаниеПроблемы);	
	
	Если ЭтоНовый() Тогда	
		СоздатьУведомление(ТекстТелеграм);
	ИначеЕсли Не ЭтоНовый() Тогда
		Если Выборка.Сотрудник <> Специалист Тогда
			НовыйСпециалист = Специалист;
		КонецЕсли;
		Если Выборка.Дата <> ДатаПроведенияРабот Тогда
			НоваяДата = Формат(ДатаПроведенияРабот,"ДЛФ=DD;" );
		КонецЕсли;
		Если Выборка.Время <> ВремяНачалаРаботПлан Тогда
			НовоеВремя = Формат(ВремяНачалаРаботПлан,"ДЛФ=T;");
		КонецЕсли;
		Если Выборка.Клиент <> Клиент Тогда
			НовыйКлиент = Клиент;
		КонецЕсли;
		ТекстТелеграм = СтрШаблон("Изменен документ %1: Клиент %2, Дата проведения работ %3 Время начало работ %4 Сотрудник %5, Описание проблеммы;%6",
									Ссылка, НовыйКлиент, НоваяДата, НовоеВремя, НовыйСпециалист, ОписаниеПроблемы);	
		СоздатьУведомление(ТекстТелеграм);
	КонецЕсли;
			
КонецПроцедуры

Процедура СоздатьУведомление(ТекстТелеграм)
	
		Справочники.ВКМ_УведомленияТГБоту.СоздатьЭлемент();
		НовЭлемент = Справочники.ВКМ_УведомленияТГБоту.СоздатьЭлемент();
		НовЭлемент.ТекстСообщения = ТекстТелеграм;
		НовЭлемент.Записать();

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_НачалоДействия КАК НачалоДействияДоговора,
		|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_КонецДействия КАК КонецДействияДоговора,
		|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
		|	ВКМ_ОбслуживаниеКлиента.Договор.ВидДоговора КАК ВидДоговора
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Если Выборка.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание
	И Выборка.НачалоДействияДоговора < Дата И Дата < Выборка.КонецДействияДоговора Тогда
		
		Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Договор  = Договор;
		Движение.Клиент = Клиент;
		Движение.КоличествоЧасов = Час(ВремяОкончанияРаботПлан) - Час(ВремяНачалаРаботПлан);
		Движение.СуммаКОплате = Движение.КоличествоЧасов * Выборка.СтоимостьЧасаРаботы;
		Движения.ВКМ_ВыполненныеКлиентуРаботы.Записать();
		
		 
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот,
			|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы
			|ИЗ
			|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата,) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
			|		ПО (ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник = ВКМ_ОбслуживаниеКлиента.Специалист)
			|ГДЕ
			|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник = &Сотрудник
			|	И ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить(); 
	
	Если РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;  
		ОбщегоНазначения.СообщитьПользователю("Не указан процент"); 
		Возврат; 
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВыборкаДетальныеЗаписи.Следующий();
	
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина; 
	Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить(); 
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход; 
	Движение.Период = Дата; 
	Движение.Сотрудник = Специалист; 
	Движение.ЧасовКОплате = ВыполненыеРаботы.Итог("ЧасыКОплатеКлиенту");   
	
	ЧасовКОплатеКлиенту = ВыполненыеРаботы.Итог("ЧасыКОплатеКлиенту");   
	СтавкаЧасаКлиента =ВыборкаДетальныеЗаписи.СтоимостьЧасаРаботы; 
	ПроцентОтРабот = ВыборкаДетальныеЗаписи.ПроцентОтРабот; 
    
    Движение.СуммаКОплате = ЧасовКОплатеКлиенту * СтавкаЧасаКлиента * ПроцентОтРабот / 100; 
	
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли



